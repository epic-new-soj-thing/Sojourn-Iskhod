name: Copilot Compare Changelogs

on:
  workflow_dispatch:
    inputs:
      left_ref:
        description: "Left ref (e.g., upstream/master)"
        required: false
        default: "upstream/master"
      right_ref:
        description: "Right ref (e.g., original/master)"
        required: false
        default: "original/master"

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      id-token: write
      models: read
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Add remotes and fetch
        run: |
          git remote add upstream https://github.com/epic-new-soj-thing/Sojourn-Iskhod.git || true
          git remote add original https://github.com/sojourn-13/sojourn-station.git || true
          git fetch --all --prune

      - name: Compute merge-base and diffs
        id: diff
        run: |
          LEFT_REF="${{ github.event.inputs.left_ref }}"
          RIGHT_REF="${{ github.event.inputs.right_ref }}"
          MB=$(git merge-base "$LEFT_REF" "$RIGHT_REF")
          echo "merge-base=$MB" >> $GITHUB_OUTPUT
          git diff -U0 "$MB..$LEFT_REF" > left.diff || true
          git diff -U0 "$MB..$RIGHT_REF" > right.diff || true

      - name: Summarize LEFT with GitHub Models
        id: leftsum
        uses: actions/github-script@v7
        env:
          DIFF_PATH: left.diff
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const diff = fs.readFileSync(process.env.DIFF_PATH, 'utf8').slice(0, 380000);
            const system = 'You are a meticulous changelog generator.';
            const user = `From the unified diff, produce a single YAML document for SS13 changelogs with this exact structure:\nauthor: Copilot\nchanges:\n  - <prefix>: <player-facing description>\n  - <prefix>: <player-facing description>\ndelete-after: true\n\nRules:\n- Use only these prefixes (map as follows):\n  add->rscadd, del->rscdel, tweak->qol, balance->balance, fix->bugfix,\n  soundadd->soundadd, sounddel->sounddel, imageadd->imageadd, imagedel->imagedel,\n  spellcheck->spellcheck, code->code_imp, refactor->refactor, config->config,\n  admin->admin, server->server\n- Prefer concise, player-facing descriptions; group noisy low-level edits.\n- Output ONLY the YAML (no code fences, no commentary).\n\n--- DIFF START ---\n${diff}\n--- DIFF END ---\n`;

            const resp = await fetch('https://models.inference.ai.azure.com/chat/completions', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${process.env.GITHUB_TOKEN}`,
                'Content-Type': 'application/json',
                'x-ms-model-inference-endpoint': 'gpt-4o-mini',
              },
              body: JSON.stringify({
                messages: [
                  { role: 'system', content: system },
                  { role: 'user', content: user },
                ],
                temperature: 0.2,
                max_tokens: 2000,
              }),
            });
            if (!resp.ok) {
              const text = await resp.text();
              core.setFailed(`Model call failed: ${resp.status} ${text}`);
              return;
            }
            const data = await resp.json();
            const out = (data.choices && data.choices[0] && data.choices[0].message && data.choices[0].message.content) || '';
            core.setOutput('summary', out);
            fs.mkdirSync('html/changelogs', { recursive: true });
            fs.writeFileSync('html/changelogs/copilot_left.yml', out, 'utf8');

      - name: Summarize RIGHT with GitHub Models
        id: rightsum
        uses: actions/github-script@v7
        env:
          DIFF_PATH: right.diff
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const fs = require('fs');
            const diff = fs.readFileSync(process.env.DIFF_PATH, 'utf8').slice(0, 380000);
            const system = 'You are a meticulous changelog generator.';
            const user = `From the unified diff, produce a single YAML document for SS13 changelogs with this exact structure:\nauthor: Copilot\nchanges:\n  - <prefix>: <player-facing description>\n  - <prefix>: <player-facing description>\ndelete-after: true\n\nRules:\n- Use only these prefixes (map as follows):\n  add->rscadd, del->rscdel, tweak->qol, balance->balance, fix->bugfix,\n  soundadd->soundadd, sounddel->sounddel, imageadd->imageadd, imagedel->imagedel,\n  spellcheck->spellcheck, code->code_imp, refactor->refactor, config->config,\n  admin->admin, server->server\n- Prefer concise, player-facing descriptions; group noisy low-level edits.\n- Output ONLY the YAML (no code fences, no commentary).\n\n--- DIFF START ---\n${diff}\n--- DIFF END ---\n`;

            const resp = await fetch('https://models.inference.ai.azure.com/chat/completions', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${process.env.GITHUB_TOKEN}`,
                'Content-Type': 'application/json',
                'x-ms-model-inference-endpoint': 'gpt-4o-mini',
              },
              body: JSON.stringify({
                messages: [
                  { role: 'system', content: system },
                  { role: 'user', content: user },
                ],
                temperature: 0.2,
                max_tokens: 2000,
              }),
            });
            if (!resp.ok) {
              const text = await resp.text();
              core.setFailed(`Model call failed: ${resp.status} ${text}`);
              return;
            }
            const data = await resp.json();
            const out = (data.choices && data.choices[0] && data.choices[0].message && data.choices[0].message.content) || '';
            core.setOutput('summary', out);
            fs.mkdirSync('html/changelogs', { recursive: true });
            fs.writeFileSync('html/changelogs/copilot_right.yml', out, 'utf8');

      - name: Assemble report
        run: |
          {
            echo "# Copilot-based Cross-Repo Changelogs";
            echo;
            echo "## Left: ${{ github.event.inputs.left_ref }} (vs ${{ github.event.inputs.right_ref }})";
            echo;
            echo '```yaml';
            echo "${{ steps.leftsum.outputs.summary }}";
            echo '```';
            echo;
            echo "## Right: ${{ github.event.inputs.right_ref }} (vs ${{ github.event.inputs.left_ref }})";
            echo;
            echo '```yaml';
            echo "${{ steps.rightsum.outputs.summary }}";
            echo '```';
          } > changelogs_copilot.md

      - name: Write YAMLs for compiler
        run: |
          mkdir -p html/changelogs
          echo "${{ steps.leftsum.outputs.summary }}" > html/changelogs/copilot_left.yml
          echo "${{ steps.rightsum.outputs.summary }}" > html/changelogs/copilot_right.yml

      - name: Compile SS13 changelogs
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyyaml
          python tools/ss13_genchangelog.py html/changelogs

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: copilot-two-way-changelogs
          path: |
            changelogs_copilot.md
            html/changelogs/archive/*.yml


