name: Copilot Generate Changelog

on:
  workflow_dispatch:
    inputs:
      base_ref:
        description: "Base ref (e.g., upstream/master)"
        required: false
        default: "upstream/master"
      since_ref:
        description: "Optional since ref (e.g., last release tag)"
        required: false
        default: ""

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
      id-token: write
      models: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Add remotes and fetch
        run: |
          git remote add upstream https://github.com/epic-new-soj-thing/Sojourn-Iskhod.git || true
          git remote add original https://github.com/sojourn-13/sojourn-station.git || true
          git fetch --all --prune

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyyaml

      - name: Generate raw changelog text
        id: gen_cl
        env:
          BASE_REF: ${{ github.event.inputs.base_ref }}
          SINCE_REF: ${{ github.event.inputs.since_ref }}
        run: |
          mkdir -p html/changelogs
          TS="$(date +'%Y-%m-%d_%H-%M-%S')"
          echo "TS=$TS" >> $GITHUB_ENV
          OUTFILE="html/changelogs/generated_${TS}.txt"
          echo "Generating changelog into $OUTFILE"
          if [ -n "$SINCE_REF" ]; then
            python tools/generate_changelog.py --base "$BASE_REF" --since "$SINCE_REF" > "$OUTFILE"
          else
            python tools/generate_changelog.py --base "$BASE_REF" > "$OUTFILE"
          fi

      - name: Summarize generated changelog with GitHub Copilot
        id: copilot_summary
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEN_FILE: html/changelogs/generated_${{ env.TS }}.txt
        with:
          script: |
            const fs = require('fs');
            const text = fs.readFileSync(process.env.GEN_FILE, 'utf8').slice(0, 380000);
            const system = 'You are a meticulous SS13 changelog generator.';
            const user = `
From this auto-generated changelog text, produce a concise player-facing YAML changelog.

Input changelog:
---
${text}
---

Output YAML with this exact structure:
author: Copilot
changes:
  - <prefix>: <player-facing description>
  - <prefix>: <player-facing description>
delete-after: true

Rules:
- Use only these prefixes (map as follows):
    add->rscadd, del->rscdel, tweak->qol, balance->balance, fix->bugfix,
    soundadd->soundadd, sounddel->sounddel, imageadd->imageadd, imagedel->imagedel,
    spellcheck->spellcheck, code->code_imp, refactor->refactor, config->config,
    admin->admin, server->server
- Prefer concise, player-facing summaries; group technical commits together.
- Output ONLY valid YAML (no markdown or commentary).
`;

            const resp = await fetch('https://models.inference.ai.azure.com/chat/completions', {
              method: 'POST',
              headers: {
                'Authorization': `Bearer ${process.env.GITHUB_TOKEN}`,
                'Content-Type': 'application/json',
                'x-ms-model-inference-endpoint': 'gpt-4o-mini',
              },
              body: JSON.stringify({
                model: 'gpt-4o-mini',
                messages: [
                  { role: 'system', content: system },
                  { role: 'user', content: user },
                ],
                temperature: 0.2,
                max_tokens: 2000,
              }),
            });

            if (!resp.ok) {
              const text = await resp.text();
              core.setFailed(`Model call failed: ${resp.status} ${text}`);
              return;
            }

            const data = await resp.json();
            const yamlOut = (data.choices?.[0]?.message?.content || '').trim();
            const outPath = `html/changelogs/copilot_${process.env.TS}.yml`;
            fs.writeFileSync(outPath, yamlOut, 'utf8');
            core.setOutput('yaml_path', outPath);
            console.log(`âœ… Wrote summarized changelog to ${outPath}`);

      - name: Commit and push summarized changelog
        env:
          GIT_AUTHOR_NAME: "Nestor Jr."
          GIT_AUTHOR_EMAIL: "action@github.com"
          GIT_COMMITTER_NAME: "Nestor Jr."
          GIT_COMMITTER_EMAIL: "action@github.com"
        run: |
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          if [ -n "$(git status --porcelain html/changelogs)" ]; then
            git add html/changelogs
            git commit -m "chore(changelog): auto-generated Copilot changelog"
            git push
          else
            echo "No changelog updates to commit."
          fi

      - name: Trigger make_changelog.yml
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: make_changelog.yml
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger compile_changelog.yml
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: compile_changelog.yml
          token: ${{ secrets.GITHUB_TOKEN }}
